# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:

  push: {}

  release:
    types: [created]

jobs:
  quality:
    name: Code QA
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: pip install black flake8 isort
    - run: black --version
    - run: isort --version
    - run: flake8 --version
    - run: isort --check .
    - run: black --check .
    - run: flake8 .

  checks:
    if: ${{ github.event_name == 'release' }}

    strategy:
      fail-fast: false
      matrix:
        platform: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.10"]

    name: Python  ${{ matrix.python-version }} on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    needs: quality

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install
      run: |
        pip install pytest
        pip install -e .
        pip install -r tests/requirements.txt
        pip freeze

    - name: Tests
      run: pytest

  deploy:

    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    needs: checks

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Check that tag version matches code version
      run: |
        tag=${GITHUB_REF#refs/tags/}
        version=$(python setup.py --version)
        echo 'tag='$tag
        echo "version file="$version
        test "$tag" == "$version"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python setup.py sdist
        twine upload dist/*
